// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import company "github.com/afternoob/gogo-boilerplate/domain/company"
import goerror "github.com/devit-tel/goerror"
import mock "github.com/stretchr/testify/mock"

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Get provides a mock function with given fields: companyId
func (_m *Repository) Get(companyId string) (*company.Company, goerror.Error) {
	ret := _m.Called(companyId)

	var r0 *company.Company
	if rf, ok := ret.Get(0).(func(string) *company.Company); ok {
		r0 = rf(companyId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*company.Company)
		}
	}

	var r1 goerror.Error
	if rf, ok := ret.Get(1).(func(string) goerror.Error); ok {
		r1 = rf(companyId)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(goerror.Error)
		}
	}

	return r0, r1
}

// Save provides a mock function with given fields: _a0
func (_m *Repository) Save(_a0 *company.Company) goerror.Error {
	ret := _m.Called(_a0)

	var r0 goerror.Error
	if rf, ok := ret.Get(0).(func(*company.Company) goerror.Error); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(goerror.Error)
		}
	}

	return r0
}
